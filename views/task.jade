extends layout

include includes/metadata
include includes/operations
include includes/platforms
include includes/objects
include includes/status


block append css
  :stylus
    .delete i
      color black
    h3.panel-title
      cursor pointer

block header
  .page-header
    if !task
      h1 Error
    else
      span.pull-right
        tt  Status 
        mixin printStatus( task.status )
        br
        tt: em= task._id
      h1
        if task.private
          i.icon-lock
        |  #{task.name}

block content

  - var MICROTASKS_LIMIT = 60;

  if !task
    .alert.alert-error
      h4 Error!
      | Invalid Task ID!
  else
    .row
      .col-lg-3: .btn-group
        a.btn.btn-info.btn-small(href="job/#{task.job}")
          i.icon-chevron-left
          |  Job
        a.btn.btn-small.btn-primary Task

      .col-lg-9.text-right: .btn-group
        if task.status<10
          a.btn.btn-small.btn-info(href="task/#{task._id}/open") Open Task!
        else
          a.btn.btn-small.btn-success(href="answer?task=#{task._id}") Answers
        if !process.env.PRODUCTION
          button.btn.btn-small.btn-danger.delete(rel="task",href=task._id) Delete 
            i.icon-trash.icon-white
        a.btn.btn-small.btn-primary(href="#{csUrl}api/landing?task=#{task._id}&show=true") Run Task! 
          i.icon-play.icon-white
    hr

    if task.description
      .panel
        .panel-heading
          h3.panel-title(data-toggle="collapse", data-target="#description") Description
        #description.collapse.in!= md(task.description)

    .row
      .col-lg-4
        mixin printOperations( task.operations )
      .col-lg-4
        mixin printPlatforms( task.platforms )
      .col-lg-4
        mixin printMetadata( task.metadata )
    .row
      .col-lg-6
        h3 Strategies
        dl
          dt Splitting strategy:
          dd= task.splittingStrategy.name

          dt Implementation strategy:
          dd= task.implementationStrategy.name

          dt Invitation strategy:
          if task.invitationStrategy
            dd= task.invitationStrategy.name
          else
            dd: tt - NONE -

          dt Microtask assignment strategy:
          dd= task.microTaskAssignmentStrategy.name

      .col-lg-6
        if task.controlrules && task.controlrules.length>0
          - groupedControlRules = _.groupBy( task.controlrules, 'event' );
          h3 Active control rules
          dl
            each controlrules, event in groupedControlRules
              dt= event
              each controlrule in controlrules
                dd= controlrule.type
                  if controlrule.type==='CUSTOM'
                    | (
                    span.text-success= controlrule.action
                    |  )
        else
          .alert.alert-info
            strong Info:
            | No control rules present...


    .row
      .col-lg-6
        h3 Microtask list (#{task.microtasks? task.microtasks.length : 0})
        if task.microtasks && task.microtasks.length>0
          ul
            each microtask, index in task.microtasks
              if index<MICROTASKS_LIMIT
                li
                  mixin printStatus( microtask.status )
                  a(href="microtask/#{microtask._id}")  #{microtask._id}

                  - var strObjs = 'objects';
                  if microtask.objects.length===1
                    - strObjs = 'object';

                  |  [
                  tt: strong= microtask.objects.length
                  |  #{strObjs}]

              else if index===MICROTASKS_LIMIT
                li: em ...and #{task.microtasks.length-MICROTASKS_LIMIT} more...
              else
                - break;
        else
          .alert.alert-info
            strong Info:
            | No microtasks present...
      .col-lg-6
        mixin printObjects( task.objects )